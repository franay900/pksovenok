version: '3.8'
services:

  # Backend контейнер
  backend:
    container_name: backend
    # Для установки нужных пакетов используем не чистый образ, а инструкции из конкретного файла Dockerfile
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    tty: true
    working_dir: /var/www
    volumes:
      - .:/var/www # Монтируем локальную папку в контейнер как /var/www
      - ./docker/backend/php.ini:/usr/local/etc/php/php.ini
    depends_on:
      - db

    # MySQL контейнер
  db:
    image: mysql:8.0
    restart: always
    volumes:
      - ./tmp/db:/var/lib/mysql
    environment:
        MYSQL_DATABASE: lardocker
        MYSQL_ROOT_PASSWORD: root
    ports:
      - 8101:3306
    command: mysqld --character-set-server=utf8 --collation-server=utf8_unicode_ci
    container_name: project_db

  # Nginx контейнер для вебсервера
  nginx:
    # Используем готовый образ для nginx контейнера
    image: nginx:alpine
    restart: unless-stopped
    tty: true
    
    ports:
      - "80:80" # Внутренний порт контейнера пробрасываем на host машину
    volumes:
      - .:/var/www/vendor # Монтируем локальную папку в контейнер как /var/www
      - ./docker/nginx/conf.d/:/etc/nginx/conf.d/ # Передаем в контейнер конфигурационные файлы nginx
    depends_on:
      - backend


  # Для сборки js
  node:
    build:
        context: .
        dockerfile: ./docker/nodejs/Dockerfile
    tty: true
    ports:
        - "5173:5173"
    working_dir: /var/www
    volumes:
        - .:/var/www # Монтируем локальную папку в контейнер как /var/www

